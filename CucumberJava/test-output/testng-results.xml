<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="8" passed="6" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-04-12T10:36:36 IST" name="Default suite" finished-at="2023-04-12T10:37:00 IST" duration-ms="24370">
    <groups>
      <group name="cucumber">
        <method signature="AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:parallel.parallelRun@7ae0a9ec]" name="runScenario" class="io.cucumber.testng.AbstractTestNGCucumberTests"/>
      </group> <!-- cucumber -->
    </groups>
    <test started-at="2023-04-12T10:36:36 IST" name="Default test" finished-at="2023-04-12T10:37:00 IST" duration-ms="24370">
      <class name="parallel.parallelRun">
        <test-method is-config="true" signature="setUpClass(org.testng.ITestContext)[pri:0, instance:parallel.parallelRun@7ae0a9ec]" started-at="2023-04-12T10:36:36 IST" name="setUpClass" finished-at="2023-04-12T10:36:36 IST" duration-ms="346" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@67ab1c47]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:parallel.parallelRun@7ae0a9ec]" started-at="2023-04-12T10:36:36 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-04-12T10:36:52 IST" duration-ms="15235" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check quantity displayed for Size S matches with available products"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["feature to test React Shopping WebSite functionality"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:parallel.parallelRun@7ae0a9ec]" started-at="2023-04-12T10:36:36 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-04-12T10:36:51 IST" duration-ms="14379" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check whether Cropped Stay Groovy off white and Skater Black Sweatshirt is eligible for free shipping"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["feature to test React Shopping WebSite functionality"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:parallel.parallelRun@7ae0a9ec]" started-at="2023-04-12T10:36:36 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-04-12T10:36:52 IST" duration-ms="15381" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if product gets purchased for Size XL"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["feature to test React Shopping WebSite functionality"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:parallel.parallelRun@7ae0a9ec]" started-at="2023-04-12T10:36:36 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-04-12T10:36:57 IST" duration-ms="20471" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if product quantity increases and decreases"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["feature to test React Shopping WebSite functionality"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:parallel.parallelRun@7ae0a9ec]" started-at="2023-04-12T10:36:36 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-04-12T10:36:59 IST" duration-ms="22699" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if github is taking login credentials through react shopping cart Site"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["feature to test React Shopping WebSite functionality"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:parallel.parallelRun@7ae0a9ec]" started-at="2023-04-12T10:36:36 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-04-12T10:36:51 IST" duration-ms="15012" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check whether Checkout button colour is Amber after hovering on it"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["feature to test React Shopping WebSite functionality"]]>
              </value>
            </param>
          </params>
          <exception class="junit.framework.ComparisonFailure">
            <message>
              <![CDATA[expected:<rgba(2[18, 179, 2], 1)> but was:<rgba(2[34, 191, 0], 1)>]]>
            </message>
            <full-stacktrace>
              <![CDATA[junit.framework.ComparisonFailure: expected:<rgba(2[18, 179, 2], 1)> but was:<rgba(2[34, 191, 0], 1)>
at junit.framework.Assert.assertEquals(Assert.java:100)
at junit.framework.Assert.assertEquals(Assert.java:107)
at parallel.ColourVerify.chekoutButtonTurnsIntoAmberColour(ColourVerify.java:48)
at âœ½.Chekout button turns into amber colour(classpath:parallel/login2.feature:42)
]]>
            </full-stacktrace>
          </exception> <!-- junit.framework.ComparisonFailure -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:parallel.parallelRun@7ae0a9ec]" started-at="2023-04-12T10:36:36 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-04-12T10:36:50 IST" duration-ms="13270" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check quantity display matches with available products"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["feature to test React Shopping WebSite functionality"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:parallel.parallelRun@7ae0a9ec]" started-at="2023-04-12T10:36:36 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-04-12T10:37:00 IST" duration-ms="23957" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check star rating count increases"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["feature to test React Shopping WebSite functionality"]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"(//a[@class='Link--muted'])[2]"}
  (Session info: chrome=112.0.5615.50)
For documentation on this error, please visit: https://selenium.dev/exceptions/#no_such_element
Build info: version: '4.8.1', revision: '8ebccac989'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [0a41df10a4d4332627e4141d4bde8550, findElement {using=xpath, value=(//a[@class='Link--muted'])[2]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.50, chrome: {chromedriverVersion: 111.0.5563.64 (c710e93d5b63..., userDataDir: C:\Program Files (x86)\scop...}, goog:chromeOptions: {debuggerAddress: localhost:50095}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:50095/devtoo..., se:cdpVersion: 112.0.5615.50, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 0a41df10a4d4332627e4141d4bde8550]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"(//a[@class='Link--muted'])[2]"}
  (Session info: chrome=112.0.5615.50)
For documentation on this error, please visit: https://selenium.dev/exceptions/#no_such_element
Build info: version: '4.8.1', revision: '8ebccac989'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [0a41df10a4d4332627e4141d4bde8550, findElement {using=xpath, value=(//a[@class='Link--muted'])[2]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.50, chrome: {chromedriverVersion: 111.0.5563.64 (c710e93d5b63..., userDataDir: C:\Program Files (x86)\scop...}, goog:chromeOptions: {debuggerAddress: localhost:50095}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:50095/devtoo..., se:cdpVersion: 112.0.5615.50, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 0a41df10a4d4332627e4141d4bde8550
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:184)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:167)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:142)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:162)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:60)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:352)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:344)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:70)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:39)
at jdk.proxy2/jdk.proxy2.$Proxy28.click(Unknown Source)
at pages.StarCountPage.star_count(StarCountPage.java:56)
at parallel.StarCount.fetchesStarCount(StarCount.java:61)
at âœ½.fetches star count(classpath:parallel/login2.feature:9)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="tearDownClass()[pri:0, instance:parallel.parallelRun@7ae0a9ec]" started-at="2023-04-12T10:37:00 IST" name="tearDownClass" finished-at="2023-04-12T10:37:00 IST" duration-ms="11" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- parallel.parallelRun -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
